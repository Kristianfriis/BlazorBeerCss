@namespace BlazorBeerCss
<div class="@GetClass()">
    <textarea @onchange="textChanged">@Text</textarea>
    @if (!string.IsNullOrEmpty(Label))
    {
        <label>@Label</label>
    }
    @if(!string.IsNullOrEmpty(Error)){
        <span class="error">@Error</span>
    }
    @if (!string.IsNullOrEmpty(Helper))
    {
        <span class="helper">@Helper</span>
    }
</div>

@code {
    [Parameter] public BeerBorders Border { get; set; } = BeerBorders.Default; 
    [Parameter] public BeerForms Form { get; set; } = BeerForms.Default;
    [Parameter] public BeerSizes Size { get; set; } = BeerSizes.Default;
    [Parameter] public bool Fill { get; set; } = false;
    [Parameter] public string Label { get; set; } = string.Empty;
    [Parameter] public string Error { get; set; } = string.Empty;
    [Parameter] public string Helper { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> TextChanged { get; set; }
    [Parameter] public string Text { get; set; } = string.Empty;

    private void textChanged(ChangeEventArgs e)
    {
        var value = e.Value;
        if (e.Value != null)
        {
            var result = (string)e.Value;
            TextChanged.InvokeAsync(result);
        }

    }

    string GetClass()
    {
        var baseClass = "field textarea";

        if (!string.IsNullOrEmpty(Label))
            baseClass = $"{baseClass} label";

        var classString = ClassHelpers.CreateClass(baseClass, Border, Form, Size);

        if (Fill)
            classString = $"{classString} { BeerForms.Fill.GetEnumDescription()}";

        if (!string.IsNullOrEmpty(Error))
            classString = $"{classString} invalid";

        return classString;
    }
}

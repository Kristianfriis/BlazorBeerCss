@namespace BlazorBeerCss
@using Extensions;
@using Helpers;
@if (Parent!.ActivePage == this)
{
    <div class="page @Padding.GetEnumDescription() @GetActive() @Position.GetEnumDescription()">
    @ChildContent
    </div>
}

@code {
    [CascadingParameter] private BeerTabs? Parent { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string? Text { get; set; }
    [Parameter] public BeerPaddings Padding { get; set; } = BeerPaddings.Default;
    [Parameter] public Icon? Icon { get; set; } = null;
    [Parameter] public string? Image { get; set; } = string.Empty;
    [Parameter] public BeerPositions Position { get; set; } = BeerPositions.Default;

    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "TabPage must exist within a BeerTabs");

        if (Icon != null && !string.IsNullOrEmpty(Image))
            throw new ArgumentException(nameof(Parent), "Both Icon and Image cannot be set at the same time");

        base.OnInitialized();

        Parent.AddPage(this);
    }

    string GetActive()
    {
        if (Parent!.ActivePage == this)
            return "active";
        return "";
    }

    public bool IsIconOrImage()
    {
        if (Icon != null || !string.IsNullOrEmpty(Image))
            return true;

        return false;
    }

    public bool IsIcon()
    {
        if (Icon != null)
            return true;

        return false;
    }
}